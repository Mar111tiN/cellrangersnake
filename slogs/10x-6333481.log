+ unset DRMAA_LIBRARY_PATH
+++ which conda
+++ alias
+++ eval declare -f
++++ declare -f
+++ /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot conda
++ /fast/users/szyskam_c/work/miniconda/envs/snake-env/bin/conda shell.bash hook
+ eval 'export CONDA_EXE='\''/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ export CONDA_EXE=/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin/conda
++ CONDA_EXE=/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin/python
++ CONDA_PYTHON_EXE=/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin/python
++ '[' -z x ']'
++ conda activate base
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate base
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate base
+++ __add_sys_prefix_to_path
+++ '[' -n '' ']'
++++ dirname /fast/users/szyskam_c/work/miniconda/envs/snake-env/bin/conda
+++ SYSP=/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin
++++ dirname /fast/users/szyskam_c/work/miniconda/envs/snake-env/bin
+++ SYSP=/fast/users/szyskam_c/work/miniconda/envs/snake-env
+++ '[' -n '' ']'
+++ PATH=/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin:/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin:/fast/users/szyskam_c/work/miniconda/condabin:/data/gpfs-1/users/szyskam_c/work/utils/myscripts/symlinx:/data/gpfs-1/users/szyskam_c/work/miniconda/bin:/data/gpfs-1/users/szyskam_c/.local/bin:/data/gpfs-1/users/szyskam_c/work/utils/cellranger-3.1.0:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/slurm/active/bin:/opt/slurm/active/sbin
+++ export PATH
+++ /fast/users/szyskam_c/work/miniconda/envs/snake-env/bin/conda shell.posix activate base
++ ask_conda='PS1='\''(snake-env) '\''
export PATH='\''/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin:/fast/users/szyskam_c/work/miniconda/condabin:/data/gpfs-1/users/szyskam_c/work/utils/myscripts/symlinx:/data/gpfs-1/users/szyskam_c/work/miniconda/bin:/data/gpfs-1/users/szyskam_c/.local/bin:/data/gpfs-1/users/szyskam_c/work/utils/cellranger-3.1.0:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/slurm/active/bin:/opt/slurm/active/sbin'\''
export CONDA_SHLVL='\''2'\''
export CONDA_PROMPT_MODIFIER='\''(snake-env) '\'''
++ eval 'PS1='\''(snake-env) '\''
export PATH='\''/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin:/fast/users/szyskam_c/work/miniconda/condabin:/data/gpfs-1/users/szyskam_c/work/utils/myscripts/symlinx:/data/gpfs-1/users/szyskam_c/work/miniconda/bin:/data/gpfs-1/users/szyskam_c/.local/bin:/data/gpfs-1/users/szyskam_c/work/utils/cellranger-3.1.0:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/slurm/active/bin:/opt/slurm/active/sbin'\''
export CONDA_SHLVL='\''2'\''
export CONDA_PROMPT_MODIFIER='\''(snake-env) '\'''
+++ PS1='(snake-env) '
+++ export PATH=/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin:/fast/users/szyskam_c/work/miniconda/condabin:/data/gpfs-1/users/szyskam_c/work/utils/myscripts/symlinx:/data/gpfs-1/users/szyskam_c/work/miniconda/bin:/data/gpfs-1/users/szyskam_c/.local/bin:/data/gpfs-1/users/szyskam_c/work/utils/cellranger-3.1.0:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/slurm/active/bin:/opt/slurm/active/sbin
+++ PATH=/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin:/fast/users/szyskam_c/work/miniconda/condabin:/data/gpfs-1/users/szyskam_c/work/utils/myscripts/symlinx:/data/gpfs-1/users/szyskam_c/work/miniconda/bin:/data/gpfs-1/users/szyskam_c/.local/bin:/data/gpfs-1/users/szyskam_c/work/utils/cellranger-3.1.0:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/slurm/active/bin:/opt/slurm/active/sbin
+++ export CONDA_SHLVL=2
+++ CONDA_SHLVL=2
+++ export 'CONDA_PROMPT_MODIFIER=(snake-env) '
+++ CONDA_PROMPT_MODIFIER='(snake-env) '
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate snake-env
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate snake-env
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(snake-env) '
++ __conda_exe shell.posix activate snake-env
++ __add_sys_prefix_to_path
++ '[' -n '' ']'
+++ dirname /fast/users/szyskam_c/work/miniconda/envs/snake-env/bin/conda
++ SYSP=/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin
+++ dirname /fast/users/szyskam_c/work/miniconda/envs/snake-env/bin
++ SYSP=/fast/users/szyskam_c/work/miniconda/envs/snake-env
++ '[' -n '' ']'
++ PATH=/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin:/fast/users/szyskam_c/work/miniconda/envs/snake-env/bin:/fast/users/szyskam_c/work/miniconda/condabin:/data/gpfs-1/users/szyskam_c/work/utils/myscripts/symlinx:/data/gpfs-1/users/szyskam_c/work/miniconda/bin:/data/gpfs-1/users/szyskam_c/.local/bin:/data/gpfs-1/users/szyskam_c/work/utils/cellranger-3.1.0:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/slurm/active/bin:/opt/slurm/active/sbin
++ export PATH
++ /fast/users/szyskam_c/work/miniconda/envs/snake-env/bin/conda shell.posix activate snake-env
Could not find conda environment: snake-env
You can list all discoverable environments with `conda info --envs`.

+ ask_conda=
+ return
+ echo /fast/users/szyskam_c/work/miniconda/envs/snake-env activated
/fast/users/szyskam_c/work/miniconda/envs/snake-env activated
+ DRMAA=' -p {cluster.partition} -t {cluster.t} --mem-per-cpu={cluster.mem} -J {cluster.name} --nodes={cluster.nodes} -n {cluster.threads}'
+ DRMAA=' -p {cluster.partition} -t {cluster.t} --mem-per-cpu={cluster.mem} -J {cluster.name} --nodes={cluster.nodes} -n {cluster.threads} -o /data/gpfs-1/users/szyskam_c/scratch/slogs/10x-6333481/{rule}-%j.log'
+ snakemake --unlock --rerun-incomplete
slurmstepd: error: *** JOB 6333481 ON hpc-cpu-67 CANCELLED AT 2022-11-25T06:16:35 ***
